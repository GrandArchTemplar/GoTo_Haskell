# Финальный зачёт по всему курсу распеределённых систему + формальной верификации и программирования
Будет 7 заданий

## Блок верификации и другой теоретической лабуды
### λ-calcucus is our environment
Посчитать значение λ-выражения
```
let T = λa.λb.a
let F = λa.λb.b
let pair = λa.λb.λt.tab
let fst = λp.p T
let snd = λp.p F
let magic = λn.λs.λz.snd(n (λp.pair (s(fst p) (fst p) ) (pair z z))
let a = λs.λz.s(sz)
let b = λs.λz.s(s(s(sz)))
find: 
(λa.λb.a pred b) b a
```

## Блок КМБ-0 хаскеля
### Foldable spaces
При помощи свёртки найти произведение списка матриц K x K
product [[[1, 0],[0, 1]],[[1, 0],[0, 1]]] = [[1, 0], [0, 1]]

### Broad...~cast~ search
Написать bfs, который возвращает кратчайший путь в невзвешенном неорграфе из точки а в точку b.

Вершины нумеруются с 0
```
bfs [[1, 2], [0, 3], [0], [1]] 0 3 = [0, 1, 3]
```

### Combinations
Напишите функцию которая генерирует все перестановки в лексикографическом порядке длины n
```
solve 2 = [[0, 1], [1, 0]]
solve 3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]]
```

## Блок КМБ-1 хаскеля
### UltimateServerCreatorFromVasja
Сделать клиент и сервер такие что:
1. клиент при подключении к серверу получает сообщение и выводит его
2. после чего клиент отключается от сервера
адрес / порт через resolve

### Servers forever in our hearts!
Всё то же самое, что и выше, но клиентов могут подключаться много => сервер вечен

## Коипьютерная грамотность

### Servant

Сделать HTTP API `GET /fac/:n:`, возвращающее `n!`.
